//******************************************************************************************
// #Version 2.5#
//
// 		Includes: All Motorcycle commands
//
//	- VcmdMotorcycleExit
//	- PcmdMotorcycleEnter
//
//		Script by Hoppah
//		
//		Usage of this script in other mods is NOT allowed without permission of Hoppah
//
//******************************************************************************************

const char CMD_ENTER_MOTORCYCLE[] 		= "PcmdMotorcycleEnter";
const char DUMMY_MOTOR[]			= "DummyMotor";
const char SND_MOTOR[]				= "mod:/Audio/FX/Misc/engine_motorcycle.wav";
const char OBJ_MOTORCYCLE[]			= "mod:Prototypes/Vehicles/03 LA Police/motorcycle_lapd.e4p";
const char OBJ_MOTORCYCLE_DRIVER[]		= "mod:Prototypes/Persons/03 LA Police/lapd_motorcycle_officer.e4p";
const char CMD_WARNINGLIGHTS_OFF[] 		= "VcmdWarningLightsOff";
const char CMD_WARNINGLIGHTS_ON[] 		= "VcmdWarningLightsOn";
const char CMD_AUTOSIREN_OFF[]			= "VcmdAutoSirenOff";
const char CMD_STANDBY_ON[]			= "VcmdStandbyOn";
const char CMD_STANDBY_OFF[]			= "VcmdStandbyOff";
const char DUMMY_PATROL[] 			= "DummyPatrol";

int DummyGroup = 20;

object VcmdMotorcycleExit : CommandScript
{
	VcmdMotorcycleExit()
	{
		SetCursor("emptycar");
		SetIcon("emptycar");
		SetValidTargets(ACTOR_VEHICLE);
		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetDoubleClickable(true);
		SetPriority(100);
	}

 	bool CheckPossible(GameObject *Caller)
 	{
 		if (!Caller->IsValid())
 			return false;
 
 		if (Caller->GetType() == ACTOR_VEHICLE)
 			return true;
 
		return true;
 	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if (!Caller->IsValid() || !Target->IsValid() || (Caller->GetID() != Target->GetID()))
			return false;

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vehicle v(Caller);
		v.PushActionWait(ACTION_NEWLIST, 0.1f);
		if (v.HasObjectPath(NULL))
			Game::ExecuteCommand(DUMMY_PATROL, &v, &v);
		if (v.HasCommand(CMD_STANDBY_OFF))
		{
			v.RemoveCommand(CMD_STANDBY_OFF);
			v.AssignCommand(CMD_STANDBY_ON);
		}
		Vector Pos = v.GetPosition();
		float r[9];
		float childr[9];
		v.GetRotation(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8]);

		Person p = Game::CreatePerson(OBJ_MOTORCYCLE_DRIVER, Caller->GetName());
		p.SetPlayerMP(v.GetPlayerMP());
		p.SetUpgradeLevel(3);
		float dx = 0.f, dy = 42.f, dz = 0.f;
		Math::RotateVector(dx, dy, dz, r);
		Math::EulerToMatrix(90.0f, 0.f, 0.f, childr);
		Math::MultiplyMatrices(childr, r);
		Pos = Pos + Vector(dx, dy, 0);
		p.SetPosition(Pos);
		p.SetRotation(childr[0], childr[1], childr[2], childr[3], childr[4], childr[5], childr[6], childr[7], childr[8]);
		p.UpdatePlacement();
 		p.Hide();
		p.PushActionWait(ACTION_APPEND, 2.5f);
		p.PushActionShowHide(ACTION_APPEND, false);

		v.SetAnimation("Getoff");
		v.RemoveCommand("MoveTo");
		v.RemoveCommand("GoHome");
		v.RemoveCommand("VcmdMotorcycleExit");
		v.RemoveCommand("VcmdToPoliceStation");
		v.RemoveCommand("VcmdPatrol");
	}
};

object PcmdMotorcycleEnter : CommandScript
{
	PcmdMotorcycleEnter()
	{
		SetCursor("entercar");
		SetIcon("entercar");
		SetValidTargets(ACTOR_VEHICLE);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || !Target || !Target->IsValid() || Target->GetType()!=ACTOR_VEHICLE)
			return false;

		GameObjectList SelectPer = Game::GetSelectedGameObjects();
		if (SelectPer.GetNumObjects() > 1)
			return false;
		
		if(Caller->GetObjectType()==TYPE_PERSON)
		{
			Person p(Caller);
			Vehicle v(Target);

			if (v.IsDestroyed())
				return false;

			if(p.IsValid() && (p.IsLinkedWithPerson() || p.IsCarryingPerson() || p.IsEquipped() || p.IsPulling() || p.GetFirehoseID()!=0 || p.GetEnteredCarID() != -1)) 
				return false;

			if (p.IsCurrentAction("EActionTreatPerson"))
				return false;

			Vehicle v(Target);
			if (v.IsValid() && !v.IsDestroyed() && StrCompare(v.GetPrototypeFileName(), OBJ_MOTORCYCLE) == 0 && v.IsCurrentAnimation("Getoff"))
 			{
				SetPriority(2000);
				return true;
			}
			return false;
		}
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Person p(Caller);
		if (childID == 0)
		{
			Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_PASSENGERDOOR);
			p.PushActionMove(ACTION_NEWLIST, TargetPos);
			p.PushActionTurnTo(ACTION_APPEND, Target);
			p.PushActionExecuteCommand(ACTION_APPEND, CMD_ENTER_MOTORCYCLE, Target, 1, false);
			p.PushActionDeleteOwner(ACTION_APPEND);
		}
		if (childID == 1)
		{
			Vehicle v(Target);
			v.SetAnimation("Geton");
			v.AssignCommand("MoveTo");
			v.AssignCommand("GoHome");
			v.AssignCommand("VcmdMotorcycleExit");
			v.AssignCommand("VcmdToPoliceStation");
			v.AssignCommand("VcmdPatrol");
			Audio::PlaySample3D(SND_MOTOR, v.GetPosition());
			if (v.HasCommand(CMD_WARNINGLIGHTS_OFF))
			{
				v.EnableBlinker(BLT_NONE);
				v.RemoveCommand(CMD_WARNINGLIGHTS_OFF);
				v.AssignCommand(CMD_WARNINGLIGHTS_ON);
			}
			if (v.HasCommand(CMD_AUTOSIREN_OFF) && !v.IsBlueLightEnabled())
				v.EnableBlueLights(true);
		}
  	}
};
//******************************************************************************************
// #Version 1.3#
//
// 		Changes: - Units can pick up police barricade and traffic cone.
//			   - Emergency 4 Deluxe compatible
//				- Motorboat change
//
//******************************************************************************************

const char OBJ_CONE[] 			= "mod:Prototypes/Vehicles/06 Objects/traffic_cone.e4p";
const char OBJ_BARRICADE[] 		= "mod:Prototypes/Vehicles/06 Objects/police_barricade.e4p";
const char OBJ_FLARE[] 			= "mod:Prototypes/Vehicles/06 Objects/flare.e4p";
const char OBJ_SPIKESTRIP[]		= "mod:Prototypes/Objects/Equipment/roadblock02.e4p";
const char OBJ_JUMPPAD[]		= "mod:Prototypes/Objects/Equipment/jumppad02.e4p";
const char OBJ_WYE[]			= "mod:Prototypes/Vehicles/06 Objects/wye.e4p";
const char DUMMY_CONE[] 		= "DummyTrafficCone";
const char DUMMY_BARRICADE[] 		= "DummyPoliceBarricade";
const char DUMMY_FLARE[] 		= "DummyFlare";
const char DUMMY_EQUIPMENT[] 		= "DummyEquipmentCommands";
const char CMD_WYE[]			= "PcmdWye";

object PickUp : CommandScript
{
	PickUp()
	{
		SetIcon("liftwithcrane");
		SetCursor("liftwithcrane");
		// Vehicle wird fürs Motorboot gebraucht
		SetValidTargets(ACTOR_OBJECT | ACTOR_PERSON | ACTOR_VEHICLE);
		SetRestrictions2(RESTRICT2_CANBEPICKEDUP);
		SetGroupID(CGROUP_PICKUP);
		SetPossibleEquipment(EQUIP_NONE);
		SetGroupLeader(true);
	}

	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid())
			return false;
		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			if (v.GetVehicleType() == VT_THW_FGRR_RL)
				return !v.IsCarryingAnything();
			return true;
		}
		if (Caller->GetType() == ACTOR_PERSON)
		{
			Person p(Caller);
			if (p.HasCommand("Dummy1Cone") || p.HasCommand("Dummy2Cones"))
				return true;

			if (p.HasCommand("Dummy1Flare") || p.HasCommand("Dummy2Flares"))
				return true;
		}
		return !Caller->IsCarryingAnything();
	}

	bool CheckPossible(GameObject *Caller)
	{
		if (!Caller->IsValid())
			return false;
		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			if (v.GetVehicleType() == VT_FIREFIGHTERS_FMB)
			{
				return v.GetFreeTransports() > 0 && (Game::ExistsNormalObjectWithFlagSet(OF_FLOTSAM) || Game::ExistsDrowningPerson());
			}
			else if (v.GetVehicleType() == VT_THW_FGRR_RL)
			{
				return !v.IsCarryingAnything() && Game::ExistsNormalObjectWithFlagSet(OF_CARRYABLE_BY_BULLDOZER);
			}
		}
		if (Caller->GetType() == ACTOR_PERSON)
		{
			Person p(Caller);
			if (p.GetArrestedID() != -1)
				return false;
		}
		if (Caller->HasCommand("Dummy1Cone") || Caller->HasCommand("Dummy2Cones"))
			return true;
		if (Caller->HasCommand("Dummy1Flare") || Caller->HasCommand("Dummy2Flares"))
			return true;
		if (Caller->IsCarryingAnything())
			return false;
		else if (Caller->HasCommand("PcmdTrafficConeGet") || Caller->HasCommand("PcmdFlareGet"))
			return true;
		else if (Caller->HasCommand("DriveAwayPerson"))
			return Game::ExistsInstalledJumppad() || Game::ExistsPickableAnimal();
		return false;
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || Caller->IsEquipped() || !Target->IsValid() || Caller->GetID()==Target->GetID())
			return false;
		
		Vehicle v(Caller);
		// (dg) special code for rl
		if (v.IsValid() && (v.GetVehicleType() == VT_THW_FGRR_RL))
		{
			GameObjectList l = v.GetCarriedObjects();
			int numObjects = l.GetNumObjects();
			if (numObjects > 0)
				return false;
			GameObject obj(Target);
			if (obj.IsValid() && obj.IsFlagSet(OF_CARRYABLE_BY_BULLDOZER))
				return true;
		}
		Vehicle m(Target);
		if(StrCompare(m.GetPrototypeFileName(), OBJ_BARRICADE) == 0 && Caller->HasCommand("Arrest"))
			return true;
		if(StrCompare(m.GetPrototypeFileName(), OBJ_CONE) == 0 && (Caller->HasCommand("Dummy1Cone") || Caller->HasCommand("Dummy2Cones") || Caller->HasCommand("EnterCar")))
			return true;
		if(StrCompare(m.GetPrototypeFileName(), OBJ_FLARE) == 0 && (Caller->HasCommand("Dummy1Flare") || Caller->HasCommand("Dummy2Flares") || Caller->HasCommand("EnterCar")))
			return true;
		if(StrCompare(m.GetPrototypeFileName(), OBJ_WYE) == 0 && !m.IsInstalled() && Caller->HasCommand("PcmdWye"))
			return true;

		// (uw) special code for fmb		
		else if (v.IsValid() && (v.GetVehicleType() == VT_FIREFIGHTERS_FMB))
		{
			GameObjectList l = v.GetCarriedObjects();
			int numObjects = l.GetNumObjects();
			// Kann FMB noch was aufnehmen?
			if (v.GetFreeTransports() <= 0)
			{
				return false;
			}			
		
			Person p(Target);
			GameObject obj(Target);
			if ((obj.IsValid() && obj.IsFlagSet(OF_FLOTSAM)) || 
				(p.IsValid() && p.IsDrowning()) )
			{
				return true;
			}

		} else if (Target->GetType() == ACTOR_VEHICLE)
			return false;

		if (Caller->IsCarryingAnything() || Caller->HasCommand("Dummy3Cones") || Caller->HasCommand("Dummy3Flares"))
			return false;
			
		GameObject obj(Target);

		// don't pickup jumppad which is in use
		if ( obj.IsJumppad() && obj.HasAnyAction() )
			return false;

		if (obj.IsValid() 
			&& (obj.IsJumppad() || obj.IsRoadblock())
			&& obj.GetObjectType()!= TYPE_PERSON 
			&& obj.GetObjectType()!= TYPE_VEHICLE )
		{
			return true;
		}
		if (obj.GetType() == ACTOR_PERSON && obj.IsFlagSet(OF_PULLABLE))
		{
			Person p(Target);
			if (p.IsDead() && p.GetRole() == ROLE_ANIMAL)
				return true;
		}		
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vehicle v(Caller);
		Vehicle m(Target);	
		if(StrCompare(m.GetPrototypeFileName(), OBJ_BARRICADE) == 0)
		{
			Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_EQUIPMENTDOOR);

			Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			Caller->PushActionTurnTo(ACTION_APPEND, Target);
			Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMY_BARRICADE, Target, 3, false);
		}
		else if(StrCompare(m.GetPrototypeFileName(), OBJ_CONE) == 0)
		{
			Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_EQUIPMENTDOOR);

			Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			Caller->PushActionTurnTo(ACTION_APPEND, Target);
			Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMY_CONE, Target, 3, false);
		}
		else if(StrCompare(m.GetPrototypeFileName(), OBJ_FLARE) == 0)
		{
			Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_EQUIPMENTDOOR);

			Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			Caller->PushActionTurnTo(ACTION_APPEND, Target);
			Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMY_FLARE, Target, 3, false);
		}
		else if(StrCompare(m.GetPrototypeFileName(), OBJ_WYE) == 0)
		{
			Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_ANY);

			Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			Caller->PushActionTurnTo(ACTION_APPEND, Target);
			Caller->PushActionExecuteCommand(ACTION_APPEND, CMD_WYE, Target, 2, false);
		}
		else if (v.GetVehicleType() == VT_FIREFIGHTERS_FMB)
		{
			Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_FOLLOW);
			Caller->PushActionTurnTo(ACTION_APPEND, Target);
			Caller->PushActionPickUp(ACTION_APPEND, Target);
			if(StrCompare(Caller->GetPrototypeFileName(), "mod:Prototypes/Vehicles/02 LA Fire Department/swr_boat.e4p") == 0)
				Caller->PushActionExecuteCommand(ACTION_APPEND, "DummyMotorboat", Target, 4, false);	
		}
		else
		{
			Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_ANY);
			
			Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			Caller->PushActionTurnTo(ACTION_APPEND, Target);
			GameObject obj(Target);
			if(StrCompare(obj.GetPrototypeFileName(), OBJ_SPIKESTRIP) == 0)
				Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMY_EQUIPMENT, Target, 11, false);
			if(StrCompare(obj.GetPrototypeFileName(), OBJ_JUMPPAD) == 0)
				Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMY_EQUIPMENT, Target, 12, false);
			if (v.GetVehicleType() == VT_THW_FGRR_RL)
			if (v.IsBucketUp())
			{
				Caller->PushActionMoveBucket(ACTION_APPEND, Target, false);
			}
			Caller->PushActionPickUp(ACTION_APPEND, Target);
			if (v.GetVehicleType() == VT_THW_FGRR_RL)
			{
				Caller->PushActionMoveBucket(ACTION_APPEND, Target, true);
			}
		}
	}
};
